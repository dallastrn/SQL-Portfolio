--For this project, I downloaded Spotify data from Kaggle, then created a table to insert the data into.
--Finally, I performed analytics on the table using SQL.

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

--#1 Who are the top 10 artists based on popularity?
SELECT artist_name
, ROUND(AVG(popularity), 2) AS popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 10;

--#2 Which song has the fastest tempo?
SELECT artist_name
, track_name
, tempo
FROM BIT_DB.Spotifydata
WHERE tempo IN (SELECT MAX(tempo)
FROM BIT_DB.Spotifydata);

--#3 Which artists released songs in 3/4 time?
SELECT artist_name
, track_name
, time_signature
FROM BIT_DB.Spotifydata
WHERE time_signature = 3;
